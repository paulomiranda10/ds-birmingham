2021-04-25 20:22:11,153:INFO:PyCaret Supervised Module
2021-04-25 20:22:11,154:INFO:ML Usecase: regression
2021-04-25 20:22:11,154:INFO:version 2.3.0
2021-04-25 20:22:11,155:INFO:Initializing setup()
2021-04-25 20:22:11,156:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=       series  year  month  gross_amt
0       30598  2017      1      24.38
1       30599  2017      1       9.99
2       30600  2017      1       7.99
3       30601  2017      1      18.43
4       30602  2017      1      18.00
...       ...   ...    ...        ...
21871   52469  2017     11       6.92
21872   52470  2017     11      95.76
21873   52471  2017     12      76.00
21874   52472  2017     12       7.38
21875   52473  2017     12       2.95

[21876 rows x 4 columns], preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 20:22:11,157:INFO:Checking environment
2021-04-25 20:22:11,157:INFO:python_version: 3.8.5
2021-04-25 20:22:11,158:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 20:22:11,158:INFO:machine: AMD64
2021-04-25 20:22:11,159:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 20:22:11,160:INFO:Memory: svmem(total=17025077248, available=6293368832, percent=63.0, used=10731708416, free=6293368832)
2021-04-25 20:22:11,161:INFO:Physical Core: 6
2021-04-25 20:22:11,161:INFO:Logical Core: 12
2021-04-25 20:22:11,162:INFO:Checking libraries
2021-04-25 20:22:11,162:INFO:pd==1.2.4
2021-04-25 20:22:11,162:INFO:numpy==1.19.5
2021-04-25 20:22:11,163:INFO:sklearn==0.23.2
2021-04-25 20:22:11,164:INFO:lightgbm==3.2.1
2021-04-25 20:22:11,165:WARNING:catboost not found
2021-04-25 20:22:11,167:WARNING:xgboost not found
2021-04-25 20:22:11,642:INFO:mlflow==1.15.0
2021-04-25 20:22:11,642:INFO:Checking Exceptions
2021-04-25 20:22:11,643:INFO:Declaring global variables
2021-04-25 20:22:11,644:INFO:USI: dd5c
2021-04-25 20:22:11,645:INFO:pycaret_globals: {'data_before_preprocess', 'logging_param', 'prep_pipe', 'imputation_classifier', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'display_container', '_available_plots', 'fold_generator', 'transform_target_method_param', 'fold_param', 'y', 'X', '_gpu_n_jobs_param', 'create_model_container', 'X_test', 'target_param', 'fold_shuffle_param', 'stratify_param', 'transform_target_param', 'X_train', '_all_models_internal', '_ml_usecase', 'seed', 'fix_imbalance_param', '_all_metrics', 'y_test', 'master_model_container', 'USI', 'log_plots_param', '_all_models', 'fold_groups_param', 'pycaret_globals', 'imputation_regressor', 'html_param', 'gpu_param', '_internal_pipeline', 'exp_name_log', 'y_train', 'experiment__', 'n_jobs_param'}
2021-04-25 20:22:11,646:INFO:Preparing display monitor
2021-04-25 20:22:11,646:INFO:Preparing display monitor
2021-04-25 20:22:11,661:INFO:Importing libraries
2021-04-25 20:22:11,661:INFO:Copying data for preprocessing
2021-04-25 20:22:11,668:INFO:Declaring preprocessing parameters
2021-04-25 20:22:11,670:INFO:Creating preprocessing pipeline
2021-04-25 20:22:11,679:INFO:Preprocessing pipeline created successfully
2021-04-25 20:22:11,680:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-25 20:22:11,681:INFO:Creating global containers
2021-04-25 20:22:11,683:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-25 20:23:57,973:INFO:PyCaret Supervised Module
2021-04-25 20:23:57,973:INFO:ML Usecase: regression
2021-04-25 20:23:57,974:INFO:version 2.3.0
2021-04-25 20:23:57,975:INFO:Initializing setup()
2021-04-25 20:23:57,976:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=       series  year  month  gross_amt
0       30598  2017      1      24.38
1       30599  2017      1       9.99
2       30600  2017      1       7.99
3       30601  2017      1      18.43
4       30602  2017      1      18.00
...       ...   ...    ...        ...
21871   52469  2017     11       6.92
21872   52470  2017     11      95.76
21873   52471  2017     12      76.00
21874   52472  2017     12       7.38
21875   52473  2017     12       2.95

[21876 rows x 4 columns], preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series', 'month'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 20:23:57,976:INFO:Checking environment
2021-04-25 20:23:57,977:INFO:python_version: 3.8.5
2021-04-25 20:23:57,977:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 20:23:57,979:INFO:machine: AMD64
2021-04-25 20:23:57,979:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 20:23:57,980:INFO:Memory: svmem(total=17025077248, available=6931746816, percent=59.3, used=10093330432, free=6931746816)
2021-04-25 20:23:57,980:INFO:Physical Core: 6
2021-04-25 20:23:57,981:INFO:Logical Core: 12
2021-04-25 20:23:57,981:INFO:Checking libraries
2021-04-25 20:23:57,982:INFO:pd==1.2.4
2021-04-25 20:23:57,983:INFO:numpy==1.19.5
2021-04-25 20:23:57,983:INFO:sklearn==0.23.2
2021-04-25 20:23:57,984:INFO:lightgbm==3.2.1
2021-04-25 20:23:57,986:WARNING:catboost not found
2021-04-25 20:23:57,987:WARNING:xgboost not found
2021-04-25 20:23:57,987:INFO:mlflow==1.15.0
2021-04-25 20:23:57,988:INFO:Checking Exceptions
2021-04-25 20:23:57,989:INFO:Declaring global variables
2021-04-25 20:23:57,989:INFO:USI: ab86
2021-04-25 20:23:57,990:INFO:pycaret_globals: {'data_before_preprocess', 'logging_param', 'prep_pipe', 'imputation_classifier', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'display_container', '_available_plots', 'fold_generator', 'transform_target_method_param', 'fold_param', 'y', 'X', '_gpu_n_jobs_param', 'create_model_container', 'X_test', 'target_param', 'fold_shuffle_param', 'stratify_param', 'transform_target_param', 'X_train', '_all_models_internal', '_ml_usecase', 'seed', 'fix_imbalance_param', '_all_metrics', 'y_test', 'master_model_container', 'USI', 'log_plots_param', '_all_models', 'fold_groups_param', 'pycaret_globals', 'imputation_regressor', 'html_param', 'gpu_param', '_internal_pipeline', 'exp_name_log', 'y_train', 'experiment__', 'n_jobs_param'}
2021-04-25 20:23:57,990:INFO:Preparing display monitor
2021-04-25 20:23:57,991:INFO:Preparing display monitor
2021-04-25 20:23:58,003:INFO:Importing libraries
2021-04-25 20:23:58,003:INFO:Copying data for preprocessing
2021-04-25 20:23:58,010:INFO:Declaring preprocessing parameters
2021-04-25 20:23:58,011:INFO:Creating preprocessing pipeline
2021-04-25 20:23:58,016:INFO:Preprocessing pipeline created successfully
2021-04-25 20:23:58,016:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-25 20:23:58,016:INFO:Creating global containers
2021-04-25 20:23:58,018:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-25 20:24:17,878:INFO:PyCaret Supervised Module
2021-04-25 20:24:17,879:INFO:ML Usecase: regression
2021-04-25 20:24:17,879:INFO:version 2.3.0
2021-04-25 20:24:17,880:INFO:Initializing setup()
2021-04-25 20:24:17,881:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=       series  year  month  gross_amt
0       30598  2017      1      24.38
1       30599  2017      1       9.99
2       30600  2017      1       7.99
3       30601  2017      1      18.43
4       30602  2017      1      18.00
...       ...   ...    ...        ...
21871   52469  2017     11       6.92
21872   52470  2017     11      95.76
21873   52471  2017     12      76.00
21874   52472  2017     12       7.38
21875   52473  2017     12       2.95

[21876 rows x 4 columns], preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series', 'month', 'gross_amt'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 20:24:17,881:INFO:Checking environment
2021-04-25 20:24:17,883:INFO:python_version: 3.8.5
2021-04-25 20:24:17,883:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 20:24:17,884:INFO:machine: AMD64
2021-04-25 20:24:17,885:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 20:24:17,886:INFO:Memory: svmem(total=17025077248, available=7033585664, percent=58.7, used=9991491584, free=7033585664)
2021-04-25 20:24:17,887:INFO:Physical Core: 6
2021-04-25 20:24:17,887:INFO:Logical Core: 12
2021-04-25 20:24:17,888:INFO:Checking libraries
2021-04-25 20:24:17,889:INFO:pd==1.2.4
2021-04-25 20:24:17,889:INFO:numpy==1.19.5
2021-04-25 20:24:17,889:INFO:sklearn==0.23.2
2021-04-25 20:24:17,890:INFO:lightgbm==3.2.1
2021-04-25 20:24:17,891:WARNING:catboost not found
2021-04-25 20:24:17,893:WARNING:xgboost not found
2021-04-25 20:24:17,893:INFO:mlflow==1.15.0
2021-04-25 20:24:17,894:INFO:Checking Exceptions
2021-04-25 20:24:40,882:INFO:PyCaret Supervised Module
2021-04-25 20:24:40,884:INFO:ML Usecase: regression
2021-04-25 20:24:40,885:INFO:version 2.3.0
2021-04-25 20:24:40,886:INFO:Initializing setup()
2021-04-25 20:24:40,887:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=       series  year  month  gross_amt
0       30598  2017      1      24.38
1       30599  2017      1       9.99
2       30600  2017      1       7.99
3       30601  2017      1      18.43
4       30602  2017      1      18.00
...       ...   ...    ...        ...
21871   52469  2017     11       6.92
21872   52470  2017     11      95.76
21873   52471  2017     12      76.00
21874   52472  2017     12       7.38
21875   52473  2017     12       2.95

[21876 rows x 4 columns], preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series', 'month'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 20:24:40,888:INFO:Checking environment
2021-04-25 20:24:40,889:INFO:python_version: 3.8.5
2021-04-25 20:24:40,890:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 20:24:40,890:INFO:machine: AMD64
2021-04-25 20:24:40,891:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 20:24:40,891:INFO:Memory: svmem(total=17025077248, available=7005184000, percent=58.9, used=10019893248, free=7005184000)
2021-04-25 20:24:40,892:INFO:Physical Core: 6
2021-04-25 20:24:40,893:INFO:Logical Core: 12
2021-04-25 20:24:40,894:INFO:Checking libraries
2021-04-25 20:24:40,894:INFO:pd==1.2.4
2021-04-25 20:24:40,895:INFO:numpy==1.19.5
2021-04-25 20:24:40,896:INFO:sklearn==0.23.2
2021-04-25 20:24:40,897:INFO:lightgbm==3.2.1
2021-04-25 20:24:40,899:WARNING:catboost not found
2021-04-25 20:24:40,901:WARNING:xgboost not found
2021-04-25 20:24:40,902:INFO:mlflow==1.15.0
2021-04-25 20:24:40,902:INFO:Checking Exceptions
2021-04-25 20:24:40,903:INFO:Declaring global variables
2021-04-25 20:24:40,904:INFO:USI: fe96
2021-04-25 20:24:40,904:INFO:pycaret_globals: {'data_before_preprocess', 'logging_param', 'prep_pipe', 'imputation_classifier', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'display_container', '_available_plots', 'fold_generator', 'transform_target_method_param', 'fold_param', 'y', 'X', '_gpu_n_jobs_param', 'create_model_container', 'X_test', 'target_param', 'fold_shuffle_param', 'stratify_param', 'transform_target_param', 'X_train', '_all_models_internal', '_ml_usecase', 'seed', 'fix_imbalance_param', '_all_metrics', 'y_test', 'master_model_container', 'USI', 'log_plots_param', '_all_models', 'fold_groups_param', 'pycaret_globals', 'imputation_regressor', 'html_param', 'gpu_param', '_internal_pipeline', 'exp_name_log', 'y_train', 'experiment__', 'n_jobs_param'}
2021-04-25 20:24:40,905:INFO:Preparing display monitor
2021-04-25 20:24:40,905:INFO:Preparing display monitor
2021-04-25 20:24:40,916:INFO:Importing libraries
2021-04-25 20:24:40,917:INFO:Copying data for preprocessing
2021-04-25 20:24:40,923:INFO:Declaring preprocessing parameters
2021-04-25 20:24:40,925:INFO:Creating preprocessing pipeline
2021-04-25 20:24:40,930:INFO:Preprocessing pipeline created successfully
2021-04-25 20:24:40,930:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-25 20:24:40,930:INFO:Creating global containers
2021-04-25 20:24:40,931:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-25 20:24:48,436:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 20:24:48,438:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 20:24:48,530:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 20:24:48,532:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 20:24:48,533:INFO:Creating grid variables
2021-04-25 20:24:48,549:INFO:create_model_container: 0
2021-04-25 20:24:48,550:INFO:master_model_container: 0
2021-04-25 20:24:48,550:INFO:display_container: 1
2021-04-25 20:24:48,555:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['year', 'series',
                                                          'month'],
                                      target='gross_amt', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numeri...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='gross_amt')),
                ('fix_perfect', Remove_100(target='gross_amt')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-25 20:24:48,556:INFO:setup() succesfully completed......................................
2021-04-25 20:26:28,819:INFO:Initializing compare_models()
2021-04-25 20:26:28,819:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-25 20:26:28,820:INFO:Checking exceptions
2021-04-25 20:26:28,821:INFO:Preparing display monitor
2021-04-25 20:26:28,822:INFO:Preparing display monitor
2021-04-25 20:26:28,844:INFO:Initializing Linear Regression
2021-04-25 20:26:28,844:INFO:Total runtime is 0.0 minutes
2021-04-25 20:26:28,852:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:28,853:INFO:Initializing create_model()
2021-04-25 20:26:28,853:INFO:create_model(estimator=lr, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:28,854:INFO:Checking exceptions
2021-04-25 20:26:28,854:INFO:Importing libraries
2021-04-25 20:26:28,855:INFO:Copying training dataset
2021-04-25 20:26:28,856:INFO:Defining folds
2021-04-25 20:26:28,857:INFO:Declaring metric variables
2021-04-25 20:26:28,866:INFO:Importing untrained model
2021-04-25 20:26:28,874:INFO:Linear Regression Imported succesfully
2021-04-25 20:26:28,889:INFO:Starting cross validation
2021-04-25 20:26:28,893:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:31,413:INFO:Calculating mean and std
2021-04-25 20:26:31,416:INFO:Creating metrics dataframe
2021-04-25 20:26:31,421:INFO:Uploading results into container
2021-04-25 20:26:31,422:INFO:Uploading model into container now
2021-04-25 20:26:31,422:INFO:create_model_container: 1
2021-04-25 20:26:31,423:INFO:master_model_container: 1
2021-04-25 20:26:31,424:INFO:display_container: 2
2021-04-25 20:26:31,426:INFO:PowerTransformedTargetRegressor(copy_X=True, fit_intercept=True, n_jobs=-1,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=LinearRegression(copy_X=True,
                                                           fit_intercept=True,
                                                           n_jobs=-1,
                                                           normalize=False))
2021-04-25 20:26:31,427:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:31,528:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:31,529:INFO:Creating metrics dataframe
2021-04-25 20:26:31,544:INFO:Initializing Lasso Regression
2021-04-25 20:26:31,544:INFO:Total runtime is 0.04499711592992147 minutes
2021-04-25 20:26:31,554:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:31,555:INFO:Initializing create_model()
2021-04-25 20:26:31,556:INFO:create_model(estimator=lasso, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:31,557:INFO:Checking exceptions
2021-04-25 20:26:31,559:INFO:Importing libraries
2021-04-25 20:26:31,559:INFO:Copying training dataset
2021-04-25 20:26:31,561:INFO:Defining folds
2021-04-25 20:26:31,562:INFO:Declaring metric variables
2021-04-25 20:26:31,571:INFO:Importing untrained model
2021-04-25 20:26:31,578:INFO:Lasso Regression Imported succesfully
2021-04-25 20:26:31,596:INFO:Starting cross validation
2021-04-25 20:26:31,598:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:33,599:INFO:Calculating mean and std
2021-04-25 20:26:33,601:INFO:Creating metrics dataframe
2021-04-25 20:26:33,605:INFO:Uploading results into container
2021-04-25 20:26:33,606:INFO:Uploading model into container now
2021-04-25 20:26:33,606:INFO:create_model_container: 2
2021-04-25 20:26:33,607:INFO:master_model_container: 2
2021-04-25 20:26:33,608:INFO:display_container: 2
2021-04-25 20:26:33,609:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-25 20:26:33,610:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:33,702:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:33,703:INFO:Creating metrics dataframe
2021-04-25 20:26:33,716:INFO:Initializing Ridge Regression
2021-04-25 20:26:33,717:INFO:Total runtime is 0.08121625979741415 minutes
2021-04-25 20:26:33,726:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:33,727:INFO:Initializing create_model()
2021-04-25 20:26:33,728:INFO:create_model(estimator=ridge, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:33,728:INFO:Checking exceptions
2021-04-25 20:26:33,729:INFO:Importing libraries
2021-04-25 20:26:33,729:INFO:Copying training dataset
2021-04-25 20:26:33,732:INFO:Defining folds
2021-04-25 20:26:33,733:INFO:Declaring metric variables
2021-04-25 20:26:33,741:INFO:Importing untrained model
2021-04-25 20:26:33,750:INFO:Ridge Regression Imported succesfully
2021-04-25 20:26:33,764:INFO:Starting cross validation
2021-04-25 20:26:33,765:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:35,713:INFO:Calculating mean and std
2021-04-25 20:26:35,715:INFO:Creating metrics dataframe
2021-04-25 20:26:35,719:INFO:Uploading results into container
2021-04-25 20:26:35,720:INFO:Uploading model into container now
2021-04-25 20:26:35,720:INFO:create_model_container: 3
2021-04-25 20:26:35,721:INFO:master_model_container: 3
2021-04-25 20:26:35,723:INFO:display_container: 2
2021-04-25 20:26:35,724:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=None, normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=Ridge(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=None, normalize=False,
                                                random_state=123, solver='auto',
                                                tol=0.001),
                                solver='auto', tol=0.001)
2021-04-25 20:26:35,725:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:35,826:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:35,827:INFO:Creating metrics dataframe
2021-04-25 20:26:35,843:INFO:Initializing Elastic Net
2021-04-25 20:26:35,844:INFO:Total runtime is 0.11666467587153118 minutes
2021-04-25 20:26:35,851:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:35,852:INFO:Initializing create_model()
2021-04-25 20:26:35,853:INFO:create_model(estimator=en, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:35,853:INFO:Checking exceptions
2021-04-25 20:26:35,854:INFO:Importing libraries
2021-04-25 20:26:35,854:INFO:Copying training dataset
2021-04-25 20:26:35,856:INFO:Defining folds
2021-04-25 20:26:35,856:INFO:Declaring metric variables
2021-04-25 20:26:35,864:INFO:Importing untrained model
2021-04-25 20:26:35,871:INFO:Elastic Net Imported succesfully
2021-04-25 20:26:35,887:INFO:Starting cross validation
2021-04-25 20:26:35,888:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:37,771:INFO:Calculating mean and std
2021-04-25 20:26:37,773:INFO:Creating metrics dataframe
2021-04-25 20:26:37,777:INFO:Uploading results into container
2021-04-25 20:26:37,778:INFO:Uploading model into container now
2021-04-25 20:26:37,779:INFO:create_model_container: 4
2021-04-25 20:26:37,779:INFO:master_model_container: 4
2021-04-25 20:26:37,780:INFO:display_container: 2
2021-04-25 20:26:37,782:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-25 20:26:37,784:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:37,873:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:37,874:INFO:Creating metrics dataframe
2021-04-25 20:26:37,889:INFO:Initializing Least Angle Regression
2021-04-25 20:26:37,890:INFO:Total runtime is 0.15076326529184977 minutes
2021-04-25 20:26:37,897:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:37,898:INFO:Initializing create_model()
2021-04-25 20:26:37,899:INFO:create_model(estimator=lar, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:37,900:INFO:Checking exceptions
2021-04-25 20:26:37,901:INFO:Importing libraries
2021-04-25 20:26:37,901:INFO:Copying training dataset
2021-04-25 20:26:37,903:INFO:Defining folds
2021-04-25 20:26:37,903:INFO:Declaring metric variables
2021-04-25 20:26:37,911:INFO:Importing untrained model
2021-04-25 20:26:37,919:INFO:Least Angle Regression Imported succesfully
2021-04-25 20:26:37,933:INFO:Starting cross validation
2021-04-25 20:26:37,934:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:37,975:INFO:Calculating mean and std
2021-04-25 20:26:37,977:INFO:Creating metrics dataframe
2021-04-25 20:26:37,981:INFO:Uploading results into container
2021-04-25 20:26:37,981:INFO:Uploading model into container now
2021-04-25 20:26:37,982:INFO:create_model_container: 5
2021-04-25 20:26:37,983:INFO:master_model_container: 5
2021-04-25 20:26:37,983:INFO:display_container: 2
2021-04-25 20:26:37,985:INFO:PowerTransformedTargetRegressor(copy_X=True, eps=2.220446049250313e-16,
                                fit_intercept=True, fit_path=True, jitter=None,
                                n_nonzero_coefs=500, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=Lars(copy_X=True,
                                               eps=2.220446049250313e-16,
                                               fit_intercept=True,
                                               fit_path=True, jitter=None,
                                               n_nonzero_coefs=500,
                                               normalize=True,
                                               precompute='auto',
                                               random_state=123,
                                               verbose=False),
                                verbose=False)
2021-04-25 20:26:37,985:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:38,062:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:38,063:INFO:Creating metrics dataframe
2021-04-25 20:26:38,082:INFO:Initializing Lasso Least Angle Regression
2021-04-25 20:26:38,082:INFO:Total runtime is 0.1539714296658834 minutes
2021-04-25 20:26:38,095:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:38,096:INFO:Initializing create_model()
2021-04-25 20:26:38,097:INFO:create_model(estimator=llar, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:38,097:INFO:Checking exceptions
2021-04-25 20:26:38,099:INFO:Importing libraries
2021-04-25 20:26:38,099:INFO:Copying training dataset
2021-04-25 20:26:38,101:INFO:Defining folds
2021-04-25 20:26:38,101:INFO:Declaring metric variables
2021-04-25 20:26:38,108:INFO:Importing untrained model
2021-04-25 20:26:38,116:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-25 20:26:38,132:INFO:Starting cross validation
2021-04-25 20:26:38,133:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:38,172:INFO:Calculating mean and std
2021-04-25 20:26:38,173:INFO:Creating metrics dataframe
2021-04-25 20:26:38,177:INFO:Uploading results into container
2021-04-25 20:26:38,177:INFO:Uploading model into container now
2021-04-25 20:26:38,178:INFO:create_model_container: 6
2021-04-25 20:26:38,179:INFO:master_model_container: 6
2021-04-25 20:26:38,180:INFO:display_container: 2
2021-04-25 20:26:38,181:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:26:38,181:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:38,262:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:38,263:INFO:Creating metrics dataframe
2021-04-25 20:26:38,278:INFO:Initializing Orthogonal Matching Pursuit
2021-04-25 20:26:38,278:INFO:Total runtime is 0.15722989638646445 minutes
2021-04-25 20:26:38,287:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:38,288:INFO:Initializing create_model()
2021-04-25 20:26:38,289:INFO:create_model(estimator=omp, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:38,289:INFO:Checking exceptions
2021-04-25 20:26:38,290:INFO:Importing libraries
2021-04-25 20:26:38,290:INFO:Copying training dataset
2021-04-25 20:26:38,292:INFO:Defining folds
2021-04-25 20:26:38,293:INFO:Declaring metric variables
2021-04-25 20:26:38,300:INFO:Importing untrained model
2021-04-25 20:26:38,307:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-25 20:26:38,323:INFO:Starting cross validation
2021-04-25 20:26:38,324:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:38,368:INFO:Calculating mean and std
2021-04-25 20:26:38,370:INFO:Creating metrics dataframe
2021-04-25 20:26:38,375:INFO:Uploading results into container
2021-04-25 20:26:38,376:INFO:Uploading model into container now
2021-04-25 20:26:38,376:INFO:create_model_container: 7
2021-04-25 20:26:38,377:INFO:master_model_container: 7
2021-04-25 20:26:38,378:INFO:display_container: 2
2021-04-25 20:26:38,379:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-25 20:26:38,380:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:38,469:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:38,470:INFO:Creating metrics dataframe
2021-04-25 20:26:38,485:INFO:Initializing Bayesian Ridge
2021-04-25 20:26:38,485:INFO:Total runtime is 0.16067877610524497 minutes
2021-04-25 20:26:38,494:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:38,495:INFO:Initializing create_model()
2021-04-25 20:26:38,496:INFO:create_model(estimator=br, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:38,496:INFO:Checking exceptions
2021-04-25 20:26:38,497:INFO:Importing libraries
2021-04-25 20:26:38,497:INFO:Copying training dataset
2021-04-25 20:26:38,498:INFO:Defining folds
2021-04-25 20:26:38,499:INFO:Declaring metric variables
2021-04-25 20:26:38,506:INFO:Importing untrained model
2021-04-25 20:26:38,513:INFO:Bayesian Ridge Imported succesfully
2021-04-25 20:26:38,530:INFO:Starting cross validation
2021-04-25 20:26:38,531:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:38,571:INFO:Calculating mean and std
2021-04-25 20:26:38,572:INFO:Creating metrics dataframe
2021-04-25 20:26:38,576:INFO:Uploading results into container
2021-04-25 20:26:38,577:INFO:Uploading model into container now
2021-04-25 20:26:38,577:INFO:create_model_container: 8
2021-04-25 20:26:38,578:INFO:master_model_container: 8
2021-04-25 20:26:38,578:INFO:display_container: 2
2021-04-25 20:26:38,580:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-25 20:26:38,580:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:38,654:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:38,654:INFO:Creating metrics dataframe
2021-04-25 20:26:38,670:INFO:Initializing Passive Aggressive Regressor
2021-04-25 20:26:38,670:INFO:Total runtime is 0.16377102931340537 minutes
2021-04-25 20:26:38,677:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:38,677:INFO:Initializing create_model()
2021-04-25 20:26:38,678:INFO:create_model(estimator=par, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:38,678:INFO:Checking exceptions
2021-04-25 20:26:38,679:INFO:Importing libraries
2021-04-25 20:26:38,680:INFO:Copying training dataset
2021-04-25 20:26:38,681:INFO:Defining folds
2021-04-25 20:26:38,681:INFO:Declaring metric variables
2021-04-25 20:26:38,689:INFO:Importing untrained model
2021-04-25 20:26:38,695:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-25 20:26:38,709:INFO:Starting cross validation
2021-04-25 20:26:38,710:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:38,785:INFO:Calculating mean and std
2021-04-25 20:26:38,786:INFO:Creating metrics dataframe
2021-04-25 20:26:38,790:INFO:Uploading results into container
2021-04-25 20:26:38,791:INFO:Uploading model into container now
2021-04-25 20:26:38,792:INFO:create_model_container: 9
2021-04-25 20:26:38,793:INFO:master_model_container: 9
2021-04-25 20:26:38,793:INFO:display_container: 2
2021-04-25 20:26:38,795:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 20:26:38,795:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:38,873:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:38,874:INFO:Creating metrics dataframe
2021-04-25 20:26:38,891:INFO:Initializing Huber Regressor
2021-04-25 20:26:38,891:INFO:Total runtime is 0.16744464238484702 minutes
2021-04-25 20:26:38,899:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:38,900:INFO:Initializing create_model()
2021-04-25 20:26:38,900:INFO:create_model(estimator=huber, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:38,901:INFO:Checking exceptions
2021-04-25 20:26:38,902:INFO:Importing libraries
2021-04-25 20:26:38,902:INFO:Copying training dataset
2021-04-25 20:26:38,903:INFO:Defining folds
2021-04-25 20:26:38,904:INFO:Declaring metric variables
2021-04-25 20:26:38,912:INFO:Importing untrained model
2021-04-25 20:26:38,919:INFO:Huber Regressor Imported succesfully
2021-04-25 20:26:38,934:INFO:Starting cross validation
2021-04-25 20:26:38,935:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:39,015:INFO:Calculating mean and std
2021-04-25 20:26:39,016:INFO:Creating metrics dataframe
2021-04-25 20:26:39,020:INFO:Uploading results into container
2021-04-25 20:26:39,020:INFO:Uploading model into container now
2021-04-25 20:26:39,021:INFO:create_model_container: 10
2021-04-25 20:26:39,022:INFO:master_model_container: 10
2021-04-25 20:26:39,022:INFO:display_container: 2
2021-04-25 20:26:39,023:INFO:PowerTransformedTargetRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True,
                                max_iter=100,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=HuberRegressor(alpha=0.0001,
                                                         epsilon=1.35,
                                                         fit_intercept=True,
                                                         max_iter=100,
                                                         tol=1e-05,
                                                         warm_start=False),
                                tol=1e-05, warm_start=False)
2021-04-25 20:26:39,024:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:39,101:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:39,101:INFO:Creating metrics dataframe
2021-04-25 20:26:39,118:INFO:Initializing K Neighbors Regressor
2021-04-25 20:26:39,119:INFO:Total runtime is 0.1712507009506226 minutes
2021-04-25 20:26:39,127:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:39,128:INFO:Initializing create_model()
2021-04-25 20:26:39,128:INFO:create_model(estimator=knn, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:39,129:INFO:Checking exceptions
2021-04-25 20:26:39,130:INFO:Importing libraries
2021-04-25 20:26:39,131:INFO:Copying training dataset
2021-04-25 20:26:39,133:INFO:Defining folds
2021-04-25 20:26:39,133:INFO:Declaring metric variables
2021-04-25 20:26:39,140:INFO:Importing untrained model
2021-04-25 20:26:39,147:INFO:K Neighbors Regressor Imported succesfully
2021-04-25 20:26:39,162:INFO:Starting cross validation
2021-04-25 20:26:39,164:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:39,710:INFO:Calculating mean and std
2021-04-25 20:26:39,711:INFO:Creating metrics dataframe
2021-04-25 20:26:39,715:INFO:Uploading results into container
2021-04-25 20:26:39,716:INFO:Uploading model into container now
2021-04-25 20:26:39,717:INFO:create_model_container: 11
2021-04-25 20:26:39,718:INFO:master_model_container: 11
2021-04-25 20:26:39,719:INFO:display_container: 2
2021-04-25 20:26:39,720:INFO:PowerTransformedTargetRegressor(algorithm='auto', leaf_size=30,
                                metric='minkowski', metric_params=None,
                                n_jobs=-1, n_neighbors=5, p=2,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=KNeighborsRegressor(algorithm='auto',
                                                              leaf_size=30,
                                                              metric='minkowski',
                                                              metric_params=None,
                                                              n_jobs=-1,
                                                              n_neighbors=5,
                                                              p=2,
                                                              weights='uniform'),
                                weights='uniform')
2021-04-25 20:26:39,720:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:39,802:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:39,802:INFO:Creating metrics dataframe
2021-04-25 20:26:39,820:INFO:Initializing Decision Tree Regressor
2021-04-25 20:26:39,820:INFO:Total runtime is 0.18293630679448447 minutes
2021-04-25 20:26:39,829:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:39,830:INFO:Initializing create_model()
2021-04-25 20:26:39,831:INFO:create_model(estimator=dt, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:39,831:INFO:Checking exceptions
2021-04-25 20:26:39,832:INFO:Importing libraries
2021-04-25 20:26:39,833:INFO:Copying training dataset
2021-04-25 20:26:39,834:INFO:Defining folds
2021-04-25 20:26:39,835:INFO:Declaring metric variables
2021-04-25 20:26:39,843:INFO:Importing untrained model
2021-04-25 20:26:39,852:INFO:Decision Tree Regressor Imported succesfully
2021-04-25 20:26:39,867:INFO:Starting cross validation
2021-04-25 20:26:39,868:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:39,966:INFO:Calculating mean and std
2021-04-25 20:26:39,967:INFO:Creating metrics dataframe
2021-04-25 20:26:39,971:INFO:Uploading results into container
2021-04-25 20:26:39,972:INFO:Uploading model into container now
2021-04-25 20:26:39,972:INFO:create_model_container: 12
2021-04-25 20:26:39,973:INFO:master_model_container: 12
2021-04-25 20:26:39,973:INFO:display_container: 2
2021-04-25 20:26:39,975:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-04-25 20:26:39,975:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:40,061:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:40,062:INFO:Creating metrics dataframe
2021-04-25 20:26:40,079:INFO:Initializing Random Forest Regressor
2021-04-25 20:26:40,080:INFO:Total runtime is 0.1872720281283061 minutes
2021-04-25 20:26:40,090:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:40,091:INFO:Initializing create_model()
2021-04-25 20:26:40,091:INFO:create_model(estimator=rf, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:40,092:INFO:Checking exceptions
2021-04-25 20:26:40,093:INFO:Importing libraries
2021-04-25 20:26:40,094:INFO:Copying training dataset
2021-04-25 20:26:40,095:INFO:Defining folds
2021-04-25 20:26:40,096:INFO:Declaring metric variables
2021-04-25 20:26:40,103:INFO:Importing untrained model
2021-04-25 20:26:40,111:INFO:Random Forest Regressor Imported succesfully
2021-04-25 20:26:40,129:INFO:Starting cross validation
2021-04-25 20:26:40,130:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:41,240:INFO:Calculating mean and std
2021-04-25 20:26:41,241:INFO:Creating metrics dataframe
2021-04-25 20:26:41,245:INFO:Uploading results into container
2021-04-25 20:26:41,245:INFO:Uploading model into container now
2021-04-25 20:26:41,246:INFO:create_model_container: 13
2021-04-25 20:26:41,247:INFO:master_model_container: 13
2021-04-25 20:26:41,248:INFO:display_container: 2
2021-04-25 20:26:41,249:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-25 20:26:41,250:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:41,333:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:41,333:INFO:Creating metrics dataframe
2021-04-25 20:26:41,351:INFO:Initializing Extra Trees Regressor
2021-04-25 20:26:41,352:INFO:Total runtime is 0.20846572319666548 minutes
2021-04-25 20:26:41,363:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:41,364:INFO:Initializing create_model()
2021-04-25 20:26:41,366:INFO:create_model(estimator=et, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:41,367:INFO:Checking exceptions
2021-04-25 20:26:41,368:INFO:Importing libraries
2021-04-25 20:26:41,369:INFO:Copying training dataset
2021-04-25 20:26:41,370:INFO:Defining folds
2021-04-25 20:26:41,371:INFO:Declaring metric variables
2021-04-25 20:26:41,380:INFO:Importing untrained model
2021-04-25 20:26:41,389:INFO:Extra Trees Regressor Imported succesfully
2021-04-25 20:26:41,404:INFO:Starting cross validation
2021-04-25 20:26:41,405:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:42,104:INFO:Calculating mean and std
2021-04-25 20:26:42,105:INFO:Creating metrics dataframe
2021-04-25 20:26:42,109:INFO:Uploading results into container
2021-04-25 20:26:42,109:INFO:Uploading model into container now
2021-04-25 20:26:42,110:INFO:create_model_container: 14
2021-04-25 20:26:42,110:INFO:master_model_container: 14
2021-04-25 20:26:42,111:INFO:display_container: 2
2021-04-25 20:26:42,113:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-25 20:26:42,114:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:42,201:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:42,202:INFO:Creating metrics dataframe
2021-04-25 20:26:42,220:INFO:Initializing AdaBoost Regressor
2021-04-25 20:26:42,221:INFO:Total runtime is 0.22294390996297203 minutes
2021-04-25 20:26:42,233:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:42,235:INFO:Initializing create_model()
2021-04-25 20:26:42,237:INFO:create_model(estimator=ada, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:42,238:INFO:Checking exceptions
2021-04-25 20:26:42,239:INFO:Importing libraries
2021-04-25 20:26:42,240:INFO:Copying training dataset
2021-04-25 20:26:42,242:INFO:Defining folds
2021-04-25 20:26:42,243:INFO:Declaring metric variables
2021-04-25 20:26:42,252:INFO:Importing untrained model
2021-04-25 20:26:42,262:INFO:AdaBoost Regressor Imported succesfully
2021-04-25 20:26:42,281:INFO:Starting cross validation
2021-04-25 20:26:42,282:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:42,660:INFO:Calculating mean and std
2021-04-25 20:26:42,662:INFO:Creating metrics dataframe
2021-04-25 20:26:42,665:INFO:Uploading results into container
2021-04-25 20:26:42,666:INFO:Uploading model into container now
2021-04-25 20:26:42,667:INFO:create_model_container: 15
2021-04-25 20:26:42,668:INFO:master_model_container: 15
2021-04-25 20:26:42,668:INFO:display_container: 2
2021-04-25 20:26:42,670:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2021-04-25 20:26:42,670:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:42,751:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:42,752:INFO:Creating metrics dataframe
2021-04-25 20:26:42,770:INFO:Initializing Gradient Boosting Regressor
2021-04-25 20:26:42,771:INFO:Total runtime is 0.2321195443471273 minutes
2021-04-25 20:26:42,778:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:42,779:INFO:Initializing create_model()
2021-04-25 20:26:42,779:INFO:create_model(estimator=gbr, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:42,780:INFO:Checking exceptions
2021-04-25 20:26:42,780:INFO:Importing libraries
2021-04-25 20:26:42,781:INFO:Copying training dataset
2021-04-25 20:26:42,782:INFO:Defining folds
2021-04-25 20:26:42,783:INFO:Declaring metric variables
2021-04-25 20:26:42,791:INFO:Importing untrained model
2021-04-25 20:26:42,799:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-25 20:26:42,812:INFO:Starting cross validation
2021-04-25 20:26:42,813:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:43,604:INFO:Calculating mean and std
2021-04-25 20:26:43,606:INFO:Creating metrics dataframe
2021-04-25 20:26:43,609:INFO:Uploading results into container
2021-04-25 20:26:43,610:INFO:Uploading model into container now
2021-04-25 20:26:43,611:INFO:create_model_container: 16
2021-04-25 20:26:43,612:INFO:master_model_container: 16
2021-04-25 20:26:43,612:INFO:display_container: 2
2021-04-25 20:26:43,614:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 20:26:43,615:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:43,699:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:43,700:INFO:Creating metrics dataframe
2021-04-25 20:26:43,720:INFO:Initializing Light Gradient Boosting Machine
2021-04-25 20:26:43,720:INFO:Total runtime is 0.24792800347010296 minutes
2021-04-25 20:26:43,729:INFO:SubProcess create_model() called ==================================
2021-04-25 20:26:43,730:INFO:Initializing create_model()
2021-04-25 20:26:43,731:INFO:create_model(estimator=lightgbm, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F061B6040>, kwargs={})
2021-04-25 20:26:43,732:INFO:Checking exceptions
2021-04-25 20:26:43,732:INFO:Importing libraries
2021-04-25 20:26:43,733:INFO:Copying training dataset
2021-04-25 20:26:43,734:INFO:Defining folds
2021-04-25 20:26:43,735:INFO:Declaring metric variables
2021-04-25 20:26:43,742:INFO:Importing untrained model
2021-04-25 20:26:43,749:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-25 20:26:43,766:INFO:Starting cross validation
2021-04-25 20:26:43,767:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:26:44,409:INFO:Calculating mean and std
2021-04-25 20:26:44,410:INFO:Creating metrics dataframe
2021-04-25 20:26:44,413:INFO:Uploading results into container
2021-04-25 20:26:44,414:INFO:Uploading model into container now
2021-04-25 20:26:44,415:INFO:create_model_container: 17
2021-04-25 20:26:44,415:INFO:master_model_container: 17
2021-04-25 20:26:44,416:INFO:display_container: 2
2021-04-25 20:26:44,418:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-25 20:26:44,418:INFO:create_model() succesfully completed......................................
2021-04-25 20:26:44,507:INFO:SubProcess create_model() end ==================================
2021-04-25 20:26:44,508:INFO:Creating metrics dataframe
2021-04-25 20:26:44,543:INFO:Initializing create_model()
2021-04-25 20:26:44,544:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-25 20:26:44,544:INFO:Checking exceptions
2021-04-25 20:26:44,545:INFO:Importing libraries
2021-04-25 20:26:44,546:INFO:Copying training dataset
2021-04-25 20:26:44,546:INFO:Defining folds
2021-04-25 20:26:44,548:INFO:Declaring metric variables
2021-04-25 20:26:44,548:INFO:Importing untrained model
2021-04-25 20:26:44,549:INFO:Declaring custom model
2021-04-25 20:26:44,551:INFO:Least Angle Regression Imported succesfully
2021-04-25 20:26:44,552:INFO:Cross validation set to False
2021-04-25 20:26:44,553:INFO:Fitting Model
2021-04-25 20:26:44,588:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:26:44,589:INFO:create_models() succesfully completed......................................
2021-04-25 20:26:44,709:INFO:create_model_container: 17
2021-04-25 20:26:44,710:INFO:master_model_container: 17
2021-04-25 20:26:44,710:INFO:display_container: 2
2021-04-25 20:26:44,712:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:26:44,712:INFO:compare_models() succesfully completed......................................
2021-04-25 20:28:18,411:INFO:Initializing predict_model()
2021-04-25 20:28:18,412:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:28:18,413:INFO:Checking exceptions
2021-04-25 20:28:18,414:INFO:Preloading libraries
2021-04-25 20:28:18,415:INFO:Preparing display monitor
2021-04-25 20:36:19,591:INFO:Initializing predict_model()
2021-04-25 20:36:19,591:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:36:19,592:INFO:Checking exceptions
2021-04-25 20:36:19,593:INFO:Preloading libraries
2021-04-25 20:36:19,594:INFO:Preparing display monitor
2021-04-25 20:38:41,259:INFO:Initializing predict_model()
2021-04-25 20:38:41,260:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:38:41,261:INFO:Checking exceptions
2021-04-25 20:38:41,261:INFO:Preloading libraries
2021-04-25 20:38:41,262:INFO:Preparing display monitor
2021-04-25 20:39:34,137:INFO:Initializing predict_model()
2021-04-25 20:39:34,138:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:39:34,139:INFO:Checking exceptions
2021-04-25 20:39:34,139:INFO:Preloading libraries
2021-04-25 20:39:34,140:INFO:Preparing display monitor
2021-04-25 20:41:16,746:INFO:Initializing predict_model()
2021-04-25 20:41:16,747:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:41:16,749:INFO:Checking exceptions
2021-04-25 20:41:16,750:INFO:Preloading libraries
2021-04-25 20:41:16,750:INFO:Preparing display monitor
2021-04-25 20:42:01,754:INFO:Initializing predict_model()
2021-04-25 20:42:01,755:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:42:01,755:INFO:Checking exceptions
2021-04-25 20:42:01,756:INFO:Preloading libraries
2021-04-25 20:42:01,758:INFO:Preparing display monitor
2021-04-25 20:47:04,103:INFO:Initializing finalize_model()
2021-04-25 20:47:04,104:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-25 20:47:04,106:INFO:Finalizing PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:47:04,109:INFO:Initializing create_model()
2021-04-25 20:47:04,110:INFO:create_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-25 20:47:04,110:INFO:Checking exceptions
2021-04-25 20:47:04,111:INFO:Importing libraries
2021-04-25 20:47:04,112:INFO:Copying training dataset
2021-04-25 20:47:04,113:INFO:Defining folds
2021-04-25 20:47:04,114:INFO:Declaring metric variables
2021-04-25 20:47:04,115:INFO:Importing untrained model
2021-04-25 20:47:04,116:INFO:Declaring custom model
2021-04-25 20:47:04,118:INFO:Least Angle Regression Imported succesfully
2021-04-25 20:47:04,119:INFO:Starting cross validation
2021-04-25 20:47:04,120:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 20:47:06,843:INFO:Calculating mean and std
2021-04-25 20:47:06,845:INFO:Creating metrics dataframe
2021-04-25 20:47:06,850:INFO:Finalizing model
2021-04-25 20:47:06,894:INFO:Uploading results into container
2021-04-25 20:47:06,895:INFO:Uploading model into container now
2021-04-25 20:47:06,895:INFO:create_model_container: 18
2021-04-25 20:47:06,896:INFO:master_model_container: 18
2021-04-25 20:47:06,897:INFO:display_container: 4
2021-04-25 20:47:06,899:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:47:06,900:INFO:create_model() succesfully completed......................................
2021-04-25 20:47:06,999:INFO:create_model_container: 18
2021-04-25 20:47:07,000:INFO:master_model_container: 18
2021-04-25 20:47:07,000:INFO:display_container: 3
2021-04-25 20:47:07,003:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 20:47:07,004:INFO:finalize_model() succesfully completed......................................
2021-04-25 20:49:53,819:INFO:Initializing predict_model()
2021-04-25 20:49:53,820:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:49:53,821:INFO:Checking exceptions
2021-04-25 20:49:53,822:INFO:Preloading libraries
2021-04-25 20:49:53,823:INFO:Preparing display monitor
2021-04-25 20:50:20,036:INFO:Initializing predict_model()
2021-04-25 20:50:20,036:INFO:predict_model(estimator=PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 20:50:20,037:INFO:Checking exceptions
2021-04-25 20:50:20,038:INFO:Preloading libraries
2021-04-25 20:50:20,039:INFO:Preparing display monitor
2021-04-25 21:35:24,574:INFO:PyCaret Supervised Module
2021-04-25 21:35:24,576:INFO:ML Usecase: regression
2021-04-25 21:35:24,577:INFO:version 2.3.0
2021-04-25 21:35:24,577:INFO:Initializing setup()
2021-04-25 21:35:24,578:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=    series  year  month  gross_amt
0       17  2017      1  200905.94
1       18  2017      2  149329.97
2       19  2017      3  193447.81
3       20  2017      4   96464.88
4       21  2017      5  166548.20
5       22  2017      6  185400.13
6       23  2017      7  210736.15
7       24  2017      8   24266.00
8       25  2017      9  164206.06
9       26  2017     10  154564.36
10      27  2017     11  194798.42
11      28  2017     12      86.33, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series', 'month'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 21:35:24,579:INFO:Checking environment
2021-04-25 21:35:24,579:INFO:python_version: 3.8.5
2021-04-25 21:35:24,581:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 21:35:24,582:INFO:machine: AMD64
2021-04-25 21:35:24,583:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 21:35:24,583:INFO:Memory: svmem(total=17025077248, available=5864902656, percent=65.6, used=11160174592, free=5864902656)
2021-04-25 21:35:24,584:INFO:Physical Core: 6
2021-04-25 21:35:24,585:INFO:Logical Core: 12
2021-04-25 21:35:24,586:INFO:Checking libraries
2021-04-25 21:35:24,586:INFO:pd==1.2.4
2021-04-25 21:35:24,587:INFO:numpy==1.19.5
2021-04-25 21:35:24,588:INFO:sklearn==0.23.2
2021-04-25 21:35:24,589:INFO:lightgbm==3.2.1
2021-04-25 21:35:24,591:WARNING:catboost not found
2021-04-25 21:35:24,592:WARNING:xgboost not found
2021-04-25 21:35:24,593:INFO:mlflow==1.15.0
2021-04-25 21:35:24,594:INFO:Checking Exceptions
2021-04-25 21:35:24,594:INFO:Declaring global variables
2021-04-25 21:35:24,596:INFO:USI: eea5
2021-04-25 21:35:24,597:INFO:pycaret_globals: {'data_before_preprocess', 'logging_param', 'prep_pipe', 'imputation_classifier', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'display_container', '_available_plots', 'fold_generator', 'transform_target_method_param', 'fold_param', 'y', 'X', '_gpu_n_jobs_param', 'create_model_container', 'X_test', 'target_param', 'fold_shuffle_param', 'stratify_param', 'transform_target_param', 'X_train', '_all_models_internal', '_ml_usecase', 'seed', 'fix_imbalance_param', '_all_metrics', 'y_test', 'master_model_container', 'USI', 'log_plots_param', '_all_models', 'fold_groups_param', 'pycaret_globals', 'imputation_regressor', 'html_param', 'gpu_param', '_internal_pipeline', 'exp_name_log', 'y_train', 'experiment__', 'n_jobs_param'}
2021-04-25 21:35:24,597:INFO:Preparing display monitor
2021-04-25 21:35:24,598:INFO:Preparing display monitor
2021-04-25 21:35:24,610:INFO:Importing libraries
2021-04-25 21:35:24,612:INFO:Copying data for preprocessing
2021-04-25 21:35:24,620:INFO:Declaring preprocessing parameters
2021-04-25 21:35:24,622:INFO:Creating preprocessing pipeline
2021-04-25 21:35:24,625:INFO:Preprocessing pipeline created successfully
2021-04-25 21:35:24,626:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-25 21:35:24,626:INFO:Creating global containers
2021-04-25 21:35:24,627:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-25 21:35:28,093:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 21:35:28,095:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 21:35:28,187:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 21:35:28,187:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 21:35:28,188:INFO:Creating grid variables
2021-04-25 21:35:28,201:INFO:create_model_container: 0
2021-04-25 21:35:28,202:INFO:master_model_container: 0
2021-04-25 21:35:28,202:INFO:display_container: 1
2021-04-25 21:35:28,206:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['year', 'series',
                                                          'month'],
                                      target='gross_amt', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numeri...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='gross_amt')),
                ('fix_perfect', Remove_100(target='gross_amt')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-25 21:35:28,207:INFO:setup() succesfully completed......................................
2021-04-25 21:35:51,651:INFO:Initializing compare_models()
2021-04-25 21:35:51,652:INFO:compare_models(include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, verbose=True, display=None, exclude=None)
2021-04-25 21:35:51,653:INFO:Checking exceptions
2021-04-25 21:35:51,653:INFO:Preparing display monitor
2021-04-25 21:35:51,654:INFO:Preparing display monitor
2021-04-25 21:35:51,677:INFO:Initializing Linear Regression
2021-04-25 21:35:51,678:INFO:Total runtime is 1.6768773396809895e-05 minutes
2021-04-25 21:35:51,686:INFO:SubProcess create_model() called ==================================
2021-04-25 21:35:51,687:INFO:Initializing create_model()
2021-04-25 21:35:51,688:INFO:create_model(estimator=lr, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:35:51,688:INFO:Checking exceptions
2021-04-25 21:35:51,689:INFO:Importing libraries
2021-04-25 21:35:51,689:INFO:Copying training dataset
2021-04-25 21:35:51,691:INFO:Defining folds
2021-04-25 21:35:51,691:INFO:Declaring metric variables
2021-04-25 21:35:51,699:INFO:Importing untrained model
2021-04-25 21:35:51,705:INFO:Linear Regression Imported succesfully
2021-04-25 21:35:51,719:INFO:Starting cross validation
2021-04-25 21:35:51,720:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:35:54,668:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-25 21:35:54,676:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').

2021-04-25 21:35:54,677:INFO:Initializing create_model()
2021-04-25 21:35:54,678:INFO:create_model(estimator=lr, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:35:54,679:INFO:Checking exceptions
2021-04-25 21:35:54,679:INFO:Importing libraries
2021-04-25 21:35:54,679:INFO:Copying training dataset
2021-04-25 21:35:54,680:INFO:Defining folds
2021-04-25 21:35:54,681:INFO:Declaring metric variables
2021-04-25 21:35:54,688:INFO:Importing untrained model
2021-04-25 21:35:54,695:INFO:Linear Regression Imported succesfully
2021-04-25 21:35:54,709:INFO:Starting cross validation
2021-04-25 21:35:54,710:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:35:57,464:ERROR:create_model() for lr raised an exception:
2021-04-25 21:35:57,466:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').

2021-04-25 21:35:57,467:INFO:Initializing Lasso Regression
2021-04-25 21:35:57,468:INFO:Total runtime is 0.09652380943298339 minutes
2021-04-25 21:35:57,478:INFO:SubProcess create_model() called ==================================
2021-04-25 21:35:57,479:INFO:Initializing create_model()
2021-04-25 21:35:57,480:INFO:create_model(estimator=lasso, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:35:57,480:INFO:Checking exceptions
2021-04-25 21:35:57,481:INFO:Importing libraries
2021-04-25 21:35:57,482:INFO:Copying training dataset
2021-04-25 21:35:57,484:INFO:Defining folds
2021-04-25 21:35:57,484:INFO:Declaring metric variables
2021-04-25 21:35:57,493:INFO:Importing untrained model
2021-04-25 21:35:57,502:INFO:Lasso Regression Imported succesfully
2021-04-25 21:35:57,520:INFO:Starting cross validation
2021-04-25 21:35:57,521:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:00,211:INFO:Calculating mean and std
2021-04-25 21:36:00,213:INFO:Creating metrics dataframe
2021-04-25 21:36:00,219:INFO:Uploading results into container
2021-04-25 21:36:00,220:INFO:Uploading model into container now
2021-04-25 21:36:00,221:INFO:create_model_container: 1
2021-04-25 21:36:00,222:INFO:master_model_container: 1
2021-04-25 21:36:00,223:INFO:display_container: 2
2021-04-25 21:36:00,225:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                max_iter=1000, normalize=False, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=Lasso(alpha=1.0, copy_X=True,
                                                fit_intercept=True,
                                                max_iter=1000, normalize=False,
                                                positive=False,
                                                precompute=False,
                                                random_state=123,
                                                selection='cyclic', tol=0.0001,
                                                warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-25 21:36:00,226:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:00,323:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:00,323:INFO:Creating metrics dataframe
2021-04-25 21:36:00,343:INFO:Initializing Ridge Regression
2021-04-25 21:36:00,344:INFO:Total runtime is 0.1444456418355306 minutes
2021-04-25 21:36:00,351:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:00,352:INFO:Initializing create_model()
2021-04-25 21:36:00,353:INFO:create_model(estimator=ridge, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:00,353:INFO:Checking exceptions
2021-04-25 21:36:00,354:INFO:Importing libraries
2021-04-25 21:36:00,355:INFO:Copying training dataset
2021-04-25 21:36:00,356:INFO:Defining folds
2021-04-25 21:36:00,358:INFO:Declaring metric variables
2021-04-25 21:36:00,365:INFO:Importing untrained model
2021-04-25 21:36:00,372:INFO:Ridge Regression Imported succesfully
2021-04-25 21:36:00,387:INFO:Starting cross validation
2021-04-25 21:36:00,388:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:02,611:WARNING:create_model() for ridge raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-25 21:36:02,612:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').

2021-04-25 21:36:02,613:INFO:Initializing create_model()
2021-04-25 21:36:02,614:INFO:create_model(estimator=ridge, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:02,614:INFO:Checking exceptions
2021-04-25 21:36:02,615:INFO:Importing libraries
2021-04-25 21:36:02,615:INFO:Copying training dataset
2021-04-25 21:36:02,616:INFO:Defining folds
2021-04-25 21:36:02,617:INFO:Declaring metric variables
2021-04-25 21:36:02,624:INFO:Importing untrained model
2021-04-25 21:36:02,632:INFO:Ridge Regression Imported succesfully
2021-04-25 21:36:02,646:INFO:Starting cross validation
2021-04-25 21:36:02,647:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:05,468:ERROR:create_model() for ridge raised an exception:
2021-04-25 21:36:05,470:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float32').

2021-04-25 21:36:05,471:INFO:Initializing Elastic Net
2021-04-25 21:36:05,471:INFO:Total runtime is 0.22990065415700278 minutes
2021-04-25 21:36:05,480:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:05,480:INFO:Initializing create_model()
2021-04-25 21:36:05,481:INFO:create_model(estimator=en, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:05,482:INFO:Checking exceptions
2021-04-25 21:36:05,483:INFO:Importing libraries
2021-04-25 21:36:05,484:INFO:Copying training dataset
2021-04-25 21:36:05,485:INFO:Defining folds
2021-04-25 21:36:05,486:INFO:Declaring metric variables
2021-04-25 21:36:05,493:INFO:Importing untrained model
2021-04-25 21:36:05,505:INFO:Elastic Net Imported succesfully
2021-04-25 21:36:05,522:INFO:Starting cross validation
2021-04-25 21:36:05,523:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:07,953:INFO:Calculating mean and std
2021-04-25 21:36:07,955:INFO:Creating metrics dataframe
2021-04-25 21:36:07,960:INFO:Uploading results into container
2021-04-25 21:36:07,961:INFO:Uploading model into container now
2021-04-25 21:36:07,962:INFO:create_model_container: 2
2021-04-25 21:36:07,962:INFO:master_model_container: 2
2021-04-25 21:36:07,963:INFO:display_container: 2
2021-04-25 21:36:07,965:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True, fit_intercept=True,
                                l1_ratio=0.5, max_iter=1000, normalize=False,
                                positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute=False, random_state=123,
                                regressor=ElasticNet(alpha=1.0, copy_X=True,
                                                     fit_intercept=True,
                                                     l1_ratio=0.5,
                                                     max_iter=1000,
                                                     normalize=False,
                                                     positive=False,
                                                     precompute=False,
                                                     random_state=123,
                                                     selection='cyclic',
                                                     tol=0.0001,
                                                     warm_start=False),
                                selection='cyclic', tol=0.0001,
                                warm_start=False)
2021-04-25 21:36:07,966:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:08,064:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:08,065:INFO:Creating metrics dataframe
2021-04-25 21:36:08,083:INFO:Initializing Least Angle Regression
2021-04-25 21:36:08,084:INFO:Total runtime is 0.27345094680786136 minutes
2021-04-25 21:36:08,093:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:08,094:INFO:Initializing create_model()
2021-04-25 21:36:08,095:INFO:create_model(estimator=lar, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:08,096:INFO:Checking exceptions
2021-04-25 21:36:08,097:INFO:Importing libraries
2021-04-25 21:36:08,098:INFO:Copying training dataset
2021-04-25 21:36:08,100:INFO:Defining folds
2021-04-25 21:36:08,100:INFO:Declaring metric variables
2021-04-25 21:36:08,109:INFO:Importing untrained model
2021-04-25 21:36:08,118:INFO:Least Angle Regression Imported succesfully
2021-04-25 21:36:08,133:INFO:Starting cross validation
2021-04-25 21:36:08,134:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:09,995:INFO:Calculating mean and std
2021-04-25 21:36:09,996:INFO:Creating metrics dataframe
2021-04-25 21:36:10,000:INFO:Uploading results into container
2021-04-25 21:36:10,001:INFO:Uploading model into container now
2021-04-25 21:36:10,002:INFO:create_model_container: 3
2021-04-25 21:36:10,002:INFO:master_model_container: 3
2021-04-25 21:36:10,003:INFO:display_container: 2
2021-04-25 21:36:10,005:INFO:PowerTransformedTargetRegressor(copy_X=True, eps=2.220446049250313e-16,
                                fit_intercept=True, fit_path=True, jitter=None,
                                n_nonzero_coefs=500, normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=Lars(copy_X=True,
                                               eps=2.220446049250313e-16,
                                               fit_intercept=True,
                                               fit_path=True, jitter=None,
                                               n_nonzero_coefs=500,
                                               normalize=True,
                                               precompute='auto',
                                               random_state=123,
                                               verbose=False),
                                verbose=False)
2021-04-25 21:36:10,006:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:10,111:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:10,112:INFO:Creating metrics dataframe
2021-04-25 21:36:10,126:INFO:Initializing Lasso Least Angle Regression
2021-04-25 21:36:10,127:INFO:Total runtime is 0.307502289613088 minutes
2021-04-25 21:36:10,135:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:10,136:INFO:Initializing create_model()
2021-04-25 21:36:10,138:INFO:create_model(estimator=llar, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:10,138:INFO:Checking exceptions
2021-04-25 21:36:10,139:INFO:Importing libraries
2021-04-25 21:36:10,140:INFO:Copying training dataset
2021-04-25 21:36:10,141:INFO:Defining folds
2021-04-25 21:36:10,141:INFO:Declaring metric variables
2021-04-25 21:36:10,150:INFO:Importing untrained model
2021-04-25 21:36:10,158:INFO:Lasso Least Angle Regression Imported succesfully
2021-04-25 21:36:10,176:INFO:Starting cross validation
2021-04-25 21:36:10,178:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:12,032:INFO:Calculating mean and std
2021-04-25 21:36:12,034:INFO:Creating metrics dataframe
2021-04-25 21:36:12,038:INFO:Uploading results into container
2021-04-25 21:36:12,038:INFO:Uploading model into container now
2021-04-25 21:36:12,039:INFO:create_model_container: 4
2021-04-25 21:36:12,040:INFO:master_model_container: 4
2021-04-25 21:36:12,041:INFO:display_container: 2
2021-04-25 21:36:12,042:INFO:PowerTransformedTargetRegressor(alpha=1.0, copy_X=True,
                                eps=2.220446049250313e-16, fit_intercept=True,
                                fit_path=True, jitter=None, max_iter=500,
                                normalize=True, positive=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto', random_state=123,
                                regressor=LassoLars(alpha=1.0, copy_X=True,
                                                    eps=2.220446049250313e-16,
                                                    fit_intercept=True,
                                                    fit_path=True, jitter=None,
                                                    max_iter=500,
                                                    normalize=True,
                                                    positive=False,
                                                    precompute='auto',
                                                    random_state=123,
                                                    verbose=False),
                                verbose=False)
2021-04-25 21:36:12,043:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:12,149:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:12,150:INFO:Creating metrics dataframe
2021-04-25 21:36:12,164:INFO:Initializing Orthogonal Matching Pursuit
2021-04-25 21:36:12,164:INFO:Total runtime is 0.3414451201756796 minutes
2021-04-25 21:36:12,173:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:12,174:INFO:Initializing create_model()
2021-04-25 21:36:12,175:INFO:create_model(estimator=omp, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:12,175:INFO:Checking exceptions
2021-04-25 21:36:12,176:INFO:Importing libraries
2021-04-25 21:36:12,176:INFO:Copying training dataset
2021-04-25 21:36:12,178:INFO:Defining folds
2021-04-25 21:36:12,179:INFO:Declaring metric variables
2021-04-25 21:36:12,189:INFO:Importing untrained model
2021-04-25 21:36:12,196:INFO:Orthogonal Matching Pursuit Imported succesfully
2021-04-25 21:36:12,214:INFO:Starting cross validation
2021-04-25 21:36:12,215:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:14,074:INFO:Calculating mean and std
2021-04-25 21:36:14,075:INFO:Creating metrics dataframe
2021-04-25 21:36:14,080:INFO:Uploading results into container
2021-04-25 21:36:14,081:INFO:Uploading model into container now
2021-04-25 21:36:14,082:INFO:create_model_container: 5
2021-04-25 21:36:14,083:INFO:master_model_container: 5
2021-04-25 21:36:14,084:INFO:display_container: 2
2021-04-25 21:36:14,085:INFO:PowerTransformedTargetRegressor(fit_intercept=True, n_nonzero_coefs=None,
                                normalize=True,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                precompute='auto',
                                regressor=OrthogonalMatchingPursuit(fit_intercept=True,
                                                                    n_nonzero_coefs=None,
                                                                    normalize=True,
                                                                    precompute='auto',
                                                                    tol=None),
                                tol=None)
2021-04-25 21:36:14,086:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:14,191:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:14,192:INFO:Creating metrics dataframe
2021-04-25 21:36:14,207:INFO:Initializing Bayesian Ridge
2021-04-25 21:36:14,207:INFO:Total runtime is 0.3754974206288656 minutes
2021-04-25 21:36:14,215:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:14,216:INFO:Initializing create_model()
2021-04-25 21:36:14,217:INFO:create_model(estimator=br, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:14,217:INFO:Checking exceptions
2021-04-25 21:36:14,218:INFO:Importing libraries
2021-04-25 21:36:14,218:INFO:Copying training dataset
2021-04-25 21:36:14,220:INFO:Defining folds
2021-04-25 21:36:14,220:INFO:Declaring metric variables
2021-04-25 21:36:14,229:INFO:Importing untrained model
2021-04-25 21:36:14,236:INFO:Bayesian Ridge Imported succesfully
2021-04-25 21:36:14,250:INFO:Starting cross validation
2021-04-25 21:36:14,251:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:14,274:INFO:Calculating mean and std
2021-04-25 21:36:14,275:INFO:Creating metrics dataframe
2021-04-25 21:36:14,279:INFO:Uploading results into container
2021-04-25 21:36:14,279:INFO:Uploading model into container now
2021-04-25 21:36:14,280:INFO:create_model_container: 6
2021-04-25 21:36:14,281:INFO:master_model_container: 6
2021-04-25 21:36:14,281:INFO:display_container: 2
2021-04-25 21:36:14,283:INFO:PowerTransformedTargetRegressor(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
                                compute_score=False, copy_X=True,
                                fit_intercept=True, lambda_1=1e-06,
                                lambda_2=1e-06, lambda_init=None, n_iter=300,
                                normalize=False,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                regressor=BayesianRidge(alpha_1=1e-06,
                                                        alpha_2=1e-06,
                                                        alpha_init=None,
                                                        compute_score=False,
                                                        copy_X=True,
                                                        fit_intercept=True,
                                                        lambda_1=1e-06,
                                                        lambda_2=1e-06,
                                                        lambda_init=None,
                                                        n_iter=300,
                                                        normalize=False,
                                                        tol=0.001,
                                                        verbose=False),
                                tol=0.001, verbose=False)
2021-04-25 21:36:14,283:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:14,368:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:14,368:INFO:Creating metrics dataframe
2021-04-25 21:36:14,384:INFO:Initializing Passive Aggressive Regressor
2021-04-25 21:36:14,385:INFO:Total runtime is 0.3784745653470358 minutes
2021-04-25 21:36:14,392:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:14,393:INFO:Initializing create_model()
2021-04-25 21:36:14,394:INFO:create_model(estimator=par, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:14,394:INFO:Checking exceptions
2021-04-25 21:36:14,395:INFO:Importing libraries
2021-04-25 21:36:14,396:INFO:Copying training dataset
2021-04-25 21:36:14,397:INFO:Defining folds
2021-04-25 21:36:14,398:INFO:Declaring metric variables
2021-04-25 21:36:14,406:INFO:Importing untrained model
2021-04-25 21:36:14,415:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-25 21:36:14,428:INFO:Starting cross validation
2021-04-25 21:36:14,429:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:14,502:INFO:Calculating mean and std
2021-04-25 21:36:14,504:INFO:Creating metrics dataframe
2021-04-25 21:36:14,509:INFO:Uploading results into container
2021-04-25 21:36:14,510:INFO:Uploading model into container now
2021-04-25 21:36:14,510:INFO:create_model_container: 7
2021-04-25 21:36:14,511:INFO:master_model_container: 7
2021-04-25 21:36:14,511:INFO:display_container: 2
2021-04-25 21:36:14,512:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:36:14,513:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:14,601:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:14,601:INFO:Creating metrics dataframe
2021-04-25 21:36:14,616:INFO:Initializing Huber Regressor
2021-04-25 21:36:14,617:INFO:Total runtime is 0.3823363025983175 minutes
2021-04-25 21:36:14,624:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:14,625:INFO:Initializing create_model()
2021-04-25 21:36:14,625:INFO:create_model(estimator=huber, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:14,626:INFO:Checking exceptions
2021-04-25 21:36:14,626:INFO:Importing libraries
2021-04-25 21:36:14,627:INFO:Copying training dataset
2021-04-25 21:36:14,629:INFO:Defining folds
2021-04-25 21:36:14,629:INFO:Declaring metric variables
2021-04-25 21:36:14,636:INFO:Importing untrained model
2021-04-25 21:36:14,643:INFO:Huber Regressor Imported succesfully
2021-04-25 21:36:14,656:INFO:Starting cross validation
2021-04-25 21:36:14,657:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:14,965:WARNING:create_model() for huber raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-25 21:36:14,967:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-25 21:36:14,967:INFO:Initializing create_model()
2021-04-25 21:36:14,968:INFO:create_model(estimator=huber, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:14,969:INFO:Checking exceptions
2021-04-25 21:36:14,969:INFO:Importing libraries
2021-04-25 21:36:14,970:INFO:Copying training dataset
2021-04-25 21:36:14,972:INFO:Defining folds
2021-04-25 21:36:14,972:INFO:Declaring metric variables
2021-04-25 21:36:14,980:INFO:Importing untrained model
2021-04-25 21:36:14,987:INFO:Huber Regressor Imported succesfully
2021-04-25 21:36:15,005:INFO:Starting cross validation
2021-04-25 21:36:15,007:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:17,620:ERROR:create_model() for huber raised an exception:
2021-04-25 21:36:17,622:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 212, in _score
    return self._sign * self._score_func(y_true, y_pred,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 178, in mean_absolute_error
    y_type, y_true, y_pred, multioutput = _check_reg_targets(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_regression.py", line 86, in _check_reg_targets
    y_pred = check_array(y_pred, ensure_2d=False, dtype=dtype)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 644, in check_array
    _assert_all_finite(array,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 96, in _assert_all_finite
    raise ValueError(
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').

2021-04-25 21:36:17,622:INFO:Initializing K Neighbors Regressor
2021-04-25 21:36:17,623:INFO:Total runtime is 0.43243578672409066 minutes
2021-04-25 21:36:17,631:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:17,632:INFO:Initializing create_model()
2021-04-25 21:36:17,632:INFO:create_model(estimator=knn, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:17,632:INFO:Checking exceptions
2021-04-25 21:36:17,633:INFO:Importing libraries
2021-04-25 21:36:17,634:INFO:Copying training dataset
2021-04-25 21:36:17,635:INFO:Defining folds
2021-04-25 21:36:17,635:INFO:Declaring metric variables
2021-04-25 21:36:17,642:INFO:Importing untrained model
2021-04-25 21:36:17,650:INFO:K Neighbors Regressor Imported succesfully
2021-04-25 21:36:17,667:INFO:Starting cross validation
2021-04-25 21:36:17,669:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:20,270:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2021-04-25 21:36:20,271:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 56, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 206, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 58, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 114, in predict
    result = super().predict(X, **predict_params)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\metaestimators.py", line 119, in <lambda>
    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\pipeline.py", line 408, in predict
    return self.steps[-1][-1].predict(Xt, **predict_params)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\compose\_target.py", line 229, in predict
    pred = self.regressor_.predict(X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\neighbors\_regression.py", line 176, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\neighbors\_base.py", line 616, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 5
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2163, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 5

2021-04-25 21:36:20,272:INFO:Initializing create_model()
2021-04-25 21:36:20,272:INFO:create_model(estimator=knn, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:20,273:INFO:Checking exceptions
2021-04-25 21:36:20,274:INFO:Importing libraries
2021-04-25 21:36:20,274:INFO:Copying training dataset
2021-04-25 21:36:20,275:INFO:Defining folds
2021-04-25 21:36:20,276:INFO:Declaring metric variables
2021-04-25 21:36:20,285:INFO:Importing untrained model
2021-04-25 21:36:20,292:INFO:K Neighbors Regressor Imported succesfully
2021-04-25 21:36:20,313:INFO:Starting cross validation
2021-04-25 21:36:20,314:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:22,881:ERROR:create_model() for knn raised an exception:
2021-04-25 21:36:22,883:ERROR:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 56, in _cached_call
    return cache[method]
KeyError: 'predict'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 431, in _process_worker
    r = call_item()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\externals\loky\process_executor.py", line 285, in __call__
    return self.fn(*self.args, **self.kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 595, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in __call__
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 262, in <listcomp>
    return [func(*args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 560, in _fit_and_score
    test_scores = _score(estimator, X_test, y_test, scorer)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 607, in _score
    scores = scorer(estimator, X_test, y_test)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 87, in __call__
    score = scorer._score(cached_call, estimator,
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 206, in _score
    y_pred = method_caller(estimator, "predict", X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\metrics\_scorer.py", line 58, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pipeline.py", line 114, in predict
    result = super().predict(X, **predict_params)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\metaestimators.py", line 119, in <lambda>
    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\pipeline.py", line 408, in predict
    return self.steps[-1][-1].predict(Xt, **predict_params)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\compose\_target.py", line 229, in predict
    pred = self.regressor_.predict(X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\neighbors\_regression.py", line 176, in predict
    neigh_dist, neigh_ind = self.kneighbors(X)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\neighbors\_base.py", line 616, in kneighbors
    raise ValueError(
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 5
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 2183, in compare_models
    model, model_fit_time = create_model_supervised(
  File "C:\Users\paulo\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\tabular.py", line 3112, in create_model_supervised
    scores = cross_validate(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\utils\validation.py", line 72, in inner_f
    return f(**kwargs)
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\sklearn\model_selection\_validation.py", line 242, in cross_validate
    scores = parallel(
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 1054, in __call__
    self.retrieve()
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\parallel.py", line 933, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "C:\Users\paulo\Downloads\Teste_Globant\Birmingham\venv_birmi\lib\site-packages\joblib\_parallel_backends.py", line 542, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 439, in result
    return self.__get_result()
  File "c:\users\paulo\anaconda3\lib\concurrent\futures\_base.py", line 388, in __get_result
    raise self._exception
ValueError: Expected n_neighbors <= n_samples,  but n_samples = 4, n_neighbors = 5

2021-04-25 21:36:22,884:INFO:Initializing Decision Tree Regressor
2021-04-25 21:36:22,885:INFO:Total runtime is 0.5201300938924155 minutes
2021-04-25 21:36:22,893:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:22,894:INFO:Initializing create_model()
2021-04-25 21:36:22,895:INFO:create_model(estimator=dt, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:22,895:INFO:Checking exceptions
2021-04-25 21:36:22,896:INFO:Importing libraries
2021-04-25 21:36:22,896:INFO:Copying training dataset
2021-04-25 21:36:22,898:INFO:Defining folds
2021-04-25 21:36:22,898:INFO:Declaring metric variables
2021-04-25 21:36:22,905:INFO:Importing untrained model
2021-04-25 21:36:22,913:INFO:Decision Tree Regressor Imported succesfully
2021-04-25 21:36:22,932:INFO:Starting cross validation
2021-04-25 21:36:22,934:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:25,345:INFO:Calculating mean and std
2021-04-25 21:36:25,347:INFO:Creating metrics dataframe
2021-04-25 21:36:25,352:INFO:Uploading results into container
2021-04-25 21:36:25,352:INFO:Uploading model into container now
2021-04-25 21:36:25,354:INFO:create_model_container: 8
2021-04-25 21:36:25,354:INFO:master_model_container: 8
2021-04-25 21:36:25,355:INFO:display_container: 2
2021-04-25 21:36:25,357:INFO:PowerTransformedTargetRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                presort='deprecated', random_state=123,
                                regressor=DecisionTreeRegressor(ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features=None,
                                                                max_leaf_nodes=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                presort='deprecated',
                                                                random_state=123,
                                                                splitter='best'),
                                splitter='best')
2021-04-25 21:36:25,358:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:25,466:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:25,466:INFO:Creating metrics dataframe
2021-04-25 21:36:25,483:INFO:Initializing Random Forest Regressor
2021-04-25 21:36:25,484:INFO:Total runtime is 0.56344766219457 minutes
2021-04-25 21:36:25,490:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:25,491:INFO:Initializing create_model()
2021-04-25 21:36:25,492:INFO:create_model(estimator=rf, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:25,493:INFO:Checking exceptions
2021-04-25 21:36:25,493:INFO:Importing libraries
2021-04-25 21:36:25,494:INFO:Copying training dataset
2021-04-25 21:36:25,495:INFO:Defining folds
2021-04-25 21:36:25,495:INFO:Declaring metric variables
2021-04-25 21:36:25,502:INFO:Importing untrained model
2021-04-25 21:36:25,509:INFO:Random Forest Regressor Imported succesfully
2021-04-25 21:36:25,522:INFO:Starting cross validation
2021-04-25 21:36:25,522:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:27,509:INFO:Calculating mean and std
2021-04-25 21:36:27,511:INFO:Creating metrics dataframe
2021-04-25 21:36:27,515:INFO:Uploading results into container
2021-04-25 21:36:27,516:INFO:Uploading model into container now
2021-04-25 21:36:27,517:INFO:create_model_container: 9
2021-04-25 21:36:27,518:INFO:master_model_container: 9
2021-04-25 21:36:27,518:INFO:display_container: 2
2021-04-25 21:36:27,521:INFO:PowerTransformedTargetRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                power...
                                regressor=RandomForestRegressor(bootstrap=True,
                                                                ccp_alpha=0.0,
                                                                criterion='mse',
                                                                max_depth=None,
                                                                max_features='auto',
                                                                max_leaf_nodes=None,
                                                                max_samples=None,
                                                                min_impurity_decrease=0.0,
                                                                min_impurity_split=None,
                                                                min_samples_leaf=1,
                                                                min_samples_split=2,
                                                                min_weight_fraction_leaf=0.0,
                                                                n_estimators=100,
                                                                n_jobs=-1,
                                                                oob_score=False,
                                                                random_state=123,
                                                                verbose=0,
                                                                warm_start=False),
                                verbose=0, warm_start=False)
2021-04-25 21:36:27,522:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:27,624:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:27,624:INFO:Creating metrics dataframe
2021-04-25 21:36:27,642:INFO:Initializing Extra Trees Regressor
2021-04-25 21:36:27,642:INFO:Total runtime is 0.5994186878204346 minutes
2021-04-25 21:36:27,650:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:27,651:INFO:Initializing create_model()
2021-04-25 21:36:27,652:INFO:create_model(estimator=et, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:27,653:INFO:Checking exceptions
2021-04-25 21:36:27,653:INFO:Importing libraries
2021-04-25 21:36:27,654:INFO:Copying training dataset
2021-04-25 21:36:27,656:INFO:Defining folds
2021-04-25 21:36:27,656:INFO:Declaring metric variables
2021-04-25 21:36:27,665:INFO:Importing untrained model
2021-04-25 21:36:27,672:INFO:Extra Trees Regressor Imported succesfully
2021-04-25 21:36:27,687:INFO:Starting cross validation
2021-04-25 21:36:27,689:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:29,672:INFO:Calculating mean and std
2021-04-25 21:36:29,674:INFO:Creating metrics dataframe
2021-04-25 21:36:29,678:INFO:Uploading results into container
2021-04-25 21:36:29,679:INFO:Uploading model into container now
2021-04-25 21:36:29,680:INFO:create_model_container: 10
2021-04-25 21:36:29,680:INFO:master_model_container: 10
2021-04-25 21:36:29,681:INFO:display_container: 2
2021-04-25 21:36:29,683:INFO:PowerTransformedTargetRegressor(bootstrap=False, ccp_alpha=0.0, criterion='mse',
                                max_depth=None, max_features='auto',
                                max_leaf_nodes=None, max_samples=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_jobs=-1, oob_score=False,
                                power_transformer_method='box-cox',
                                powe...
                                regressor=ExtraTreesRegressor(bootstrap=False,
                                                              ccp_alpha=0.0,
                                                              criterion='mse',
                                                              max_depth=None,
                                                              max_features='auto',
                                                              max_leaf_nodes=None,
                                                              max_samples=None,
                                                              min_impurity_decrease=0.0,
                                                              min_impurity_split=None,
                                                              min_samples_leaf=1,
                                                              min_samples_split=2,
                                                              min_weight_fraction_leaf=0.0,
                                                              n_estimators=100,
                                                              n_jobs=-1,
                                                              oob_score=False,
                                                              random_state=123,
                                                              verbose=0,
                                                              warm_start=False),
                                verbose=0, warm_start=False)
2021-04-25 21:36:29,683:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:29,795:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:29,795:INFO:Creating metrics dataframe
2021-04-25 21:36:29,818:INFO:Initializing AdaBoost Regressor
2021-04-25 21:36:29,820:INFO:Total runtime is 0.6356978178024293 minutes
2021-04-25 21:36:29,831:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:29,832:INFO:Initializing create_model()
2021-04-25 21:36:29,833:INFO:create_model(estimator=ada, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:29,834:INFO:Checking exceptions
2021-04-25 21:36:29,835:INFO:Importing libraries
2021-04-25 21:36:29,836:INFO:Copying training dataset
2021-04-25 21:36:29,837:INFO:Defining folds
2021-04-25 21:36:29,838:INFO:Declaring metric variables
2021-04-25 21:36:29,848:INFO:Importing untrained model
2021-04-25 21:36:29,856:INFO:AdaBoost Regressor Imported succesfully
2021-04-25 21:36:29,871:INFO:Starting cross validation
2021-04-25 21:36:29,871:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:31,819:INFO:Calculating mean and std
2021-04-25 21:36:31,820:INFO:Creating metrics dataframe
2021-04-25 21:36:31,824:INFO:Uploading results into container
2021-04-25 21:36:31,825:INFO:Uploading model into container now
2021-04-25 21:36:31,826:INFO:create_model_container: 11
2021-04-25 21:36:31,827:INFO:master_model_container: 11
2021-04-25 21:36:31,828:INFO:display_container: 2
2021-04-25 21:36:31,829:INFO:PowerTransformedTargetRegressor(base_estimator=None, learning_rate=1.0,
                                loss='linear', n_estimators=50,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=AdaBoostRegressor(base_estimator=None,
                                                            learning_rate=1.0,
                                                            loss='linear',
                                                            n_estimators=50,
                                                            random_state=123))
2021-04-25 21:36:31,830:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:31,930:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:31,931:INFO:Creating metrics dataframe
2021-04-25 21:36:31,948:INFO:Initializing Gradient Boosting Regressor
2021-04-25 21:36:31,949:INFO:Total runtime is 0.6712020039558412 minutes
2021-04-25 21:36:31,956:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:31,958:INFO:Initializing create_model()
2021-04-25 21:36:31,958:INFO:create_model(estimator=gbr, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:31,959:INFO:Checking exceptions
2021-04-25 21:36:31,959:INFO:Importing libraries
2021-04-25 21:36:31,960:INFO:Copying training dataset
2021-04-25 21:36:31,962:INFO:Defining folds
2021-04-25 21:36:31,963:INFO:Declaring metric variables
2021-04-25 21:36:31,970:INFO:Importing untrained model
2021-04-25 21:36:31,977:INFO:Gradient Boosting Regressor Imported succesfully
2021-04-25 21:36:31,993:INFO:Starting cross validation
2021-04-25 21:36:31,994:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:32,035:INFO:Calculating mean and std
2021-04-25 21:36:32,037:INFO:Creating metrics dataframe
2021-04-25 21:36:32,041:INFO:Uploading results into container
2021-04-25 21:36:32,042:INFO:Uploading model into container now
2021-04-25 21:36:32,043:INFO:create_model_container: 12
2021-04-25 21:36:32,044:INFO:master_model_container: 12
2021-04-25 21:36:32,044:INFO:display_container: 2
2021-04-25 21:36:32,046:INFO:PowerTransformedTargetRegressor(alpha=0.9, ccp_alpha=0.0,
                                criterion='friedman_mse', init=None,
                                learning_rate=0.1, loss='ls', max_depth=3,
                                max_features=None, max_leaf_nodes=None,
                                min_impurity_decrease=0.0,
                                min_impurity_split=None, min_samples_leaf=1,
                                min_samples_split=2,
                                min_weight_fraction_leaf=0.0, n_estimators=100,
                                n_iter_no_change=None,
                                power_transformer_method...
                                                                    max_leaf_nodes=None,
                                                                    min_impurity_decrease=0.0,
                                                                    min_impurity_split=None,
                                                                    min_samples_leaf=1,
                                                                    min_samples_split=2,
                                                                    min_weight_fraction_leaf=0.0,
                                                                    n_estimators=100,
                                                                    n_iter_no_change=None,
                                                                    presort='deprecated',
                                                                    random_state=123,
                                                                    subsample=1.0,
                                                                    tol=0.0001,
                                                                    validation_fraction=0.1,
                                                                    verbose=0,
                                                                    warm_start=False),
                                subsample=1.0, tol=0.0001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:36:32,047:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:32,127:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:32,128:INFO:Creating metrics dataframe
2021-04-25 21:36:32,145:INFO:Initializing Light Gradient Boosting Machine
2021-04-25 21:36:32,146:INFO:Total runtime is 0.6744766195615134 minutes
2021-04-25 21:36:32,153:INFO:SubProcess create_model() called ==================================
2021-04-25 21:36:32,155:INFO:Initializing create_model()
2021-04-25 21:36:32,155:INFO:create_model(estimator=lightgbm, fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, verbose=False, system=False, metrics=None, display=<pycaret.internal.Display.Display object at 0x0000022F02081E20>, kwargs={})
2021-04-25 21:36:32,156:INFO:Checking exceptions
2021-04-25 21:36:32,156:INFO:Importing libraries
2021-04-25 21:36:32,157:INFO:Copying training dataset
2021-04-25 21:36:32,158:INFO:Defining folds
2021-04-25 21:36:32,158:INFO:Declaring metric variables
2021-04-25 21:36:32,164:INFO:Importing untrained model
2021-04-25 21:36:32,172:INFO:Light Gradient Boosting Machine Imported succesfully
2021-04-25 21:36:32,187:INFO:Starting cross validation
2021-04-25 21:36:32,188:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:36:32,708:INFO:Calculating mean and std
2021-04-25 21:36:32,709:INFO:Creating metrics dataframe
2021-04-25 21:36:32,712:INFO:Uploading results into container
2021-04-25 21:36:32,713:INFO:Uploading model into container now
2021-04-25 21:36:32,713:INFO:create_model_container: 13
2021-04-25 21:36:32,714:INFO:master_model_container: 13
2021-04-25 21:36:32,715:INFO:display_container: 2
2021-04-25 21:36:32,716:INFO:PowerTransformedTargetRegressor(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=1...
                                                        importance_type='split',
                                                        learning_rate=0.1,
                                                        max_depth=-1,
                                                        min_child_samples=20,
                                                        min_child_weight=0.001,
                                                        min_split_gain=0.0,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        num_leaves=31,
                                                        objective=None,
                                                        random_state=123,
                                                        reg_alpha=0.0,
                                                        reg_lambda=0.0,
                                                        silent=True,
                                                        subsample=1.0,
                                                        subsample_for_bin=200000,
                                                        subsample_freq=0),
                                silent=True, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0)
2021-04-25 21:36:32,717:INFO:create_model() succesfully completed......................................
2021-04-25 21:36:32,812:INFO:SubProcess create_model() end ==================================
2021-04-25 21:36:32,812:INFO:Creating metrics dataframe
2021-04-25 21:36:32,849:INFO:Initializing create_model()
2021-04-25 21:36:32,849:INFO:create_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=TimeSeriesSplit(max_train_size=None, n_splits=3), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-25 21:36:32,850:INFO:Checking exceptions
2021-04-25 21:36:32,851:INFO:Importing libraries
2021-04-25 21:36:32,851:INFO:Copying training dataset
2021-04-25 21:36:32,852:INFO:Defining folds
2021-04-25 21:36:32,852:INFO:Declaring metric variables
2021-04-25 21:36:32,853:INFO:Importing untrained model
2021-04-25 21:36:32,853:INFO:Declaring custom model
2021-04-25 21:36:32,855:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-25 21:36:32,856:INFO:Cross validation set to False
2021-04-25 21:36:32,857:INFO:Fitting Model
2021-04-25 21:36:32,864:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:36:32,864:INFO:create_models() succesfully completed......................................
2021-04-25 21:36:32,994:INFO:create_model_container: 13
2021-04-25 21:36:32,995:INFO:master_model_container: 13
2021-04-25 21:36:32,996:INFO:display_container: 2
2021-04-25 21:36:32,997:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:36:32,998:INFO:compare_models() succesfully completed......................................
2021-04-25 21:36:48,450:INFO:Initializing predict_model()
2021-04-25 21:36:48,451:INFO:predict_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 21:36:48,452:INFO:Checking exceptions
2021-04-25 21:36:48,452:INFO:Preloading libraries
2021-04-25 21:36:48,453:INFO:Preparing display monitor
2021-04-25 21:39:00,828:INFO:Initializing predict_model()
2021-04-25 21:39:00,829:INFO:predict_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 21:39:00,830:INFO:Checking exceptions
2021-04-25 21:39:00,831:INFO:Preloading libraries
2021-04-25 21:39:00,832:INFO:Preparing display monitor
2021-04-25 21:41:41,730:INFO:Initializing predict_model()
2021-04-25 21:41:41,731:INFO:predict_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 21:41:41,732:INFO:Checking exceptions
2021-04-25 21:41:41,732:INFO:Preloading libraries
2021-04-25 21:41:41,733:INFO:Preparing display monitor
2021-04-25 21:42:07,323:INFO:Initializing finalize_model()
2021-04-25 21:42:07,325:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-25 21:42:07,326:INFO:Finalizing PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:42:07,328:INFO:Initializing create_model()
2021-04-25 21:42:07,329:INFO:create_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-25 21:42:07,329:INFO:Checking exceptions
2021-04-25 21:42:07,330:INFO:Importing libraries
2021-04-25 21:42:07,331:INFO:Copying training dataset
2021-04-25 21:42:07,332:INFO:Defining folds
2021-04-25 21:42:07,333:INFO:Declaring metric variables
2021-04-25 21:42:07,334:INFO:Importing untrained model
2021-04-25 21:42:07,334:INFO:Declaring custom model
2021-04-25 21:42:07,336:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-25 21:42:07,337:INFO:Starting cross validation
2021-04-25 21:42:07,338:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 21:42:09,953:INFO:Calculating mean and std
2021-04-25 21:42:09,954:INFO:Creating metrics dataframe
2021-04-25 21:42:09,959:INFO:Finalizing model
2021-04-25 21:42:09,965:INFO:Uploading results into container
2021-04-25 21:42:09,966:INFO:Uploading model into container now
2021-04-25 21:42:09,967:INFO:create_model_container: 14
2021-04-25 21:42:09,967:INFO:master_model_container: 14
2021-04-25 21:42:09,969:INFO:display_container: 4
2021-04-25 21:42:09,971:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:42:09,973:INFO:create_model() succesfully completed......................................
2021-04-25 21:42:10,082:INFO:create_model_container: 14
2021-04-25 21:42:10,083:INFO:master_model_container: 14
2021-04-25 21:42:10,083:INFO:display_container: 3
2021-04-25 21:42:10,085:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 21:42:10,085:INFO:finalize_model() succesfully completed......................................
2021-04-25 21:42:36,263:INFO:Initializing predict_model()
2021-04-25 21:42:36,265:INFO:predict_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 21:42:36,266:INFO:Checking exceptions
2021-04-25 21:42:36,266:INFO:Preloading libraries
2021-04-25 21:42:36,267:INFO:Preparing display monitor
2021-04-25 22:59:40,227:INFO:PyCaret Supervised Module
2021-04-25 22:59:40,230:INFO:ML Usecase: regression
2021-04-25 22:59:40,231:INFO:version 2.3.0
2021-04-25 22:59:40,231:INFO:Initializing setup()
2021-04-25 22:59:40,233:INFO:setup(target=gross_amt, ml_usecase=regression, available_plots={'parameter': 'Hyperparameters', 'residuals': 'Residuals', 'error': 'Prediction Error', 'cooks': 'Cooks Distance', 'rfe': 'Feature Selection', 'learning': 'Learning Curve', 'manifold': 'Manifold Learning', 'vc': 'Validation Curve', 'feature': 'Feature Importance', 'feature_all': 'Feature Importance (All)', 'tree': 'Decision Tree', 'residuals_interactive': 'Interactive Residuals'}, train_size=0.7, test_data=    series  year  month  gross_amt
0       17  2017      1  200905.94
1       18  2017      2  149329.97
2       19  2017      3  193447.81
3       20  2017      4   96464.88
4       21  2017      5  166548.20
5       22  2017      6  185400.13
6       23  2017      7  210736.15
7       24  2017      8   24266.00
8       25  2017      9  164206.06
9       26  2017     10  154564.36
10      27  2017     11  194798.42
11      28  2017     12      86.33, preprocess=True, imputation_type=simple, iterative_imputation_iters=5, categorical_features=None, categorical_imputation=constant, categorical_iterative_imputer=lightgbm, ordinal_features=None, high_cardinality_features=None, high_cardinality_method=frequency, numeric_features=['year', 'series', 'month'], numeric_imputation=mean, numeric_iterative_imputer=lightgbm, date_features=None, ignore_features=None, normalize=False, normalize_method=zscore, transformation=False, transformation_method=yeo-johnson, handle_unknown_categorical=True, unknown_categorical_method=least_frequent, pca=False, pca_method=linear, pca_components=None, ignore_low_variance=False, combine_rare_levels=False, rare_level_threshold=0.1, bin_numeric_features=None, remove_outliers=False, outliers_threshold=0.05, remove_multicollinearity=False, multicollinearity_threshold=0.9, remove_perfect_collinearity=True, create_clusters=False, cluster_iter=20, polynomial_features=False, polynomial_degree=2, trigonometry_features=False, polynomial_threshold=0.1, group_features=None, group_names=None, feature_selection=False, feature_selection_threshold=0.8, feature_selection_method=classic, feature_interaction=False, feature_ratio=False, interaction_threshold=0.01, fix_imbalance=False, fix_imbalance_method=None, transform_target=True, transform_target_method=box-cox, data_split_shuffle=True, data_split_stratify=False, fold_strategy=timeseries, fold=3, fold_shuffle=False, fold_groups=None, n_jobs=-1, use_gpu=False, custom_pipeline=None, html=True, session_id=123, log_experiment=False, experiment_name=None, log_plots=False, log_profile=False, log_data=False, silent=False, verbose=True, profile=False, profile_kwargs=None, display=None)
2021-04-25 22:59:40,234:INFO:Checking environment
2021-04-25 22:59:40,235:INFO:python_version: 3.8.5
2021-04-25 22:59:40,236:INFO:python_build: ('default', 'Sep  3 2020 21:29:08')
2021-04-25 22:59:40,237:INFO:machine: AMD64
2021-04-25 22:59:40,237:INFO:platform: Windows-10-10.0.19041-SP0
2021-04-25 22:59:40,239:INFO:Memory: svmem(total=17025077248, available=2682884096, percent=84.2, used=14342193152, free=2682884096)
2021-04-25 22:59:40,241:INFO:Physical Core: 6
2021-04-25 22:59:40,241:INFO:Logical Core: 12
2021-04-25 22:59:40,242:INFO:Checking libraries
2021-04-25 22:59:40,243:INFO:pd==1.2.4
2021-04-25 22:59:40,243:INFO:numpy==1.19.5
2021-04-25 22:59:40,244:INFO:sklearn==0.23.2
2021-04-25 22:59:40,244:INFO:lightgbm==3.2.1
2021-04-25 22:59:40,249:WARNING:catboost not found
2021-04-25 22:59:40,250:WARNING:xgboost not found
2021-04-25 22:59:40,250:INFO:mlflow==1.15.0
2021-04-25 22:59:40,251:INFO:Checking Exceptions
2021-04-25 22:59:40,252:INFO:Declaring global variables
2021-04-25 22:59:40,253:INFO:USI: c47f
2021-04-25 22:59:40,254:INFO:pycaret_globals: {'data_before_preprocess', 'logging_param', 'prep_pipe', 'imputation_classifier', 'iterative_imputation_iters_param', 'fix_imbalance_method_param', 'display_container', '_available_plots', 'fold_generator', 'transform_target_method_param', 'fold_param', 'y', 'X', '_gpu_n_jobs_param', 'create_model_container', 'X_test', 'target_param', 'fold_shuffle_param', 'stratify_param', 'transform_target_param', 'X_train', '_all_models_internal', '_ml_usecase', 'seed', 'fix_imbalance_param', '_all_metrics', 'y_test', 'master_model_container', 'USI', 'log_plots_param', '_all_models', 'fold_groups_param', 'pycaret_globals', 'imputation_regressor', 'html_param', 'gpu_param', '_internal_pipeline', 'exp_name_log', 'y_train', 'experiment__', 'n_jobs_param'}
2021-04-25 22:59:40,255:INFO:Preparing display monitor
2021-04-25 22:59:40,256:INFO:Preparing display monitor
2021-04-25 22:59:40,267:INFO:Importing libraries
2021-04-25 22:59:40,268:INFO:Copying data for preprocessing
2021-04-25 22:59:40,274:INFO:Declaring preprocessing parameters
2021-04-25 22:59:40,275:INFO:Creating preprocessing pipeline
2021-04-25 22:59:40,279:INFO:Preprocessing pipeline created successfully
2021-04-25 22:59:40,279:ERROR:(Process Exit): setup has been interupted with user command 'quit'. setup must rerun.
2021-04-25 22:59:40,280:INFO:Creating global containers
2021-04-25 22:59:40,281:INFO:Internal pipeline: Pipeline(memory=None, steps=[('empty_step', 'passthrough')], verbose=False)
2021-04-25 22:59:42,751:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 22:59:42,753:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 22:59:42,849:WARNING:Couldn't import xgboost.XGBRegressor
2021-04-25 22:59:42,851:WARNING:Couldn't import catboost.CatBoostRegressor
2021-04-25 22:59:42,853:INFO:Creating grid variables
2021-04-25 22:59:42,875:INFO:create_model_container: 0
2021-04-25 22:59:42,876:INFO:master_model_container: 0
2021-04-25 22:59:42,877:INFO:display_container: 1
2021-04-25 22:59:42,882:INFO:Pipeline(memory=None,
         steps=[('dtypes',
                 DataTypes_Auto_infer(categorical_features=[],
                                      display_types=True, features_todrop=[],
                                      id_columns=[], ml_usecase='regression',
                                      numerical_features=['year', 'series',
                                                          'month'],
                                      target='gross_amt', time_features=[])),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numeri...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='gross_amt')),
                ('fix_perfect', Remove_100(target='gross_amt')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough')],
         verbose=False)
2021-04-25 22:59:42,882:INFO:setup() succesfully completed......................................
2021-04-25 22:59:58,893:INFO:Initializing predict_model()
2021-04-25 22:59:58,894:INFO:predict_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), probability_threshold=None, encoded_labels=True, raw_score=False, round=4, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None)
2021-04-25 22:59:58,895:INFO:Checking exceptions
2021-04-25 22:59:58,895:INFO:Preloading libraries
2021-04-25 22:59:58,897:INFO:Preparing display monitor
2021-04-25 23:00:05,410:INFO:Initializing finalize_model()
2021-04-25 23:00:05,410:INFO:finalize_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fit_kwargs=None, groups=None, model_only=True, display=None)
2021-04-25 23:00:05,412:INFO:Finalizing PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 23:00:05,415:INFO:Initializing create_model()
2021-04-25 23:00:05,415:INFO:create_model(estimator=PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, verbose=False, system=False, metrics=None, display=None, kwargs={})
2021-04-25 23:00:05,416:INFO:Checking exceptions
2021-04-25 23:00:05,416:INFO:Importing libraries
2021-04-25 23:00:05,418:INFO:Copying training dataset
2021-04-25 23:00:05,420:INFO:Defining folds
2021-04-25 23:00:05,420:INFO:Declaring metric variables
2021-04-25 23:00:05,421:INFO:Importing untrained model
2021-04-25 23:00:05,421:INFO:Declaring custom model
2021-04-25 23:00:05,424:INFO:Passive Aggressive Regressor Imported succesfully
2021-04-25 23:00:05,424:INFO:Starting cross validation
2021-04-25 23:00:05,425:INFO:Cross validating with TimeSeriesSplit(max_train_size=None, n_splits=3), n_jobs=-1
2021-04-25 23:00:09,604:INFO:Calculating mean and std
2021-04-25 23:00:09,605:INFO:Creating metrics dataframe
2021-04-25 23:00:09,610:INFO:Finalizing model
2021-04-25 23:00:09,620:INFO:Uploading results into container
2021-04-25 23:00:09,621:INFO:Uploading model into container now
2021-04-25 23:00:09,622:INFO:create_model_container: 1
2021-04-25 23:00:09,623:INFO:master_model_container: 1
2021-04-25 23:00:09,624:INFO:display_container: 2
2021-04-25 23:00:09,625:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 23:00:09,627:INFO:create_model() succesfully completed......................................
2021-04-25 23:00:09,756:INFO:create_model_container: 1
2021-04-25 23:00:09,757:INFO:master_model_container: 1
2021-04-25 23:00:09,757:INFO:display_container: 1
2021-04-25 23:00:09,759:INFO:PowerTransformedTargetRegressor(C=1.0, average=False, early_stopping=False,
                                epsilon=0.1, fit_intercept=True,
                                loss='epsilon_insensitive', max_iter=1000,
                                n_iter_no_change=5,
                                power_transformer_method='box-cox',
                                power_transformer_standardize=True,
                                random_state=123,
                                regressor=PassiveAggressiveRegressor(C=1.0,
                                                                     average=False,
                                                                     early_stopping=False,
                                                                     epsilon=0.1,
                                                                     fit_intercept=True,
                                                                     loss='epsilon_insensitive',
                                                                     max_iter=1000,
                                                                     n_iter_no_change=5,
                                                                     random_state=123,
                                                                     shuffle=True,
                                                                     tol=0.001,
                                                                     validation_fraction=0.1,
                                                                     verbose=0,
                                                                     warm_start=False),
                                shuffle=True, tol=0.001,
                                validation_fraction=0.1, verbose=0,
                                warm_start=False)
2021-04-25 23:00:09,760:INFO:finalize_model() succesfully completed......................................
